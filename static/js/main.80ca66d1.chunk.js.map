{"version":3,"sources":["Components/FeedbackOptions/FeedbackOptions.module.css","Components/Section/Section.js","Components/FeedbackOptions/FeedbackOptions.js","Components/Statistics/Statistics.js","Components/Notification/Notification.js","App.js","index.js","Components/Section/Section.module.css"],"names":["module","exports","Section","title","children","className","s","container","FeedbackOptions","options","onLeaveFeedback","keyRender","key","push","name","type","onClick","btn","toUpperCase","slice","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","state","handleIncrement","bind","event","statisticName","target","this","setState","prevState","totalFeebback","totalFeedback","Math","round","countTotalFeedback","positivFeedback","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,IAAM,+B,kLCgBTC,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASC,UAAWC,IAAEC,UAAtB,UACE,6BAAKJ,IACJC,M,iBCoBQI,MAxBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC9BC,EAAY,GAChB,IAAK,IAAIC,KAAOH,EACdE,EAAUE,KACR,wBACEC,KAAMF,EACNG,KAAK,SACLC,QAASN,EAETL,UAAWC,IAAEW,IALf,SAOGL,EAAI,GAAGM,YAAY,GAAKN,EAAIO,MAAM,IAH9BP,IAQX,OAAO,8BAAMD,KCGAS,MApBf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,gCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,mDAAsBC,EAAtB,WCCSC,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,6BAAKA,KCsECC,E,kDAlEb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXR,KAAM,EACNC,QAAS,EACTC,IAAK,GAEP,EAAKO,gBAAkB,EAAKA,gBAAgBC,KAArB,gBAPX,E,4DAUEC,GACd,IAAMC,EAAgBD,EAAME,OAAOpB,KAEnCqB,KAAKC,UAAS,SAAAC,GACZ,OAAO,2BACFA,GADL,eAEQJ,EAAgBI,EAAUJ,GAAiB,S,2CAMrD,IAAIK,EAAgB,EACpB,IAAK,IAAI1B,KAAOuB,KAAKN,MACnBS,GAAiBH,KAAKN,MAAMjB,GAE9B,OAAO0B,I,sDAGuBC,GAC9B,OAAyB,IAAlBA,EACH,EACAC,KAAKC,MAAyB,IAAlBN,KAAKN,MAAMR,KAAckB,K,+BAIzC,IAAMA,EAAgBJ,KAAKO,qBACrBC,EAAkBR,KAAKS,gCAAgCL,GAFtD,EAGwBJ,KAAKN,MAA5BR,EAHD,EAGCA,KAAMC,EAHP,EAGOA,QAASC,EAHhB,EAGgBA,IAEvB,OACE,gCACE,cAAC,EAAD,CAASpB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEM,QAAS0B,KAAKN,MACdnB,gBAAiByB,KAAKL,oBAG1B,cAAC,EAAD,CAAS3B,MAAM,aAAf,SACGoC,EACC,cAAC,EAAD,CACElB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOe,EACPd,mBAAoBkB,IAGtB,cAAC,EAAD,CAAchB,QAAQ,+B,GA3DhBkB,aCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BlD,EAAOC,QAAU,CAAC,UAAY,8B","file":"static/js/main.80ca66d1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__-7cf5\"};","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nfunction Section({ title, children }) {\n  return (\n    <section className={s.container}>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  let keyRender = [];\n  for (let key in options) {\n    keyRender.push(\n      <button\n        name={key}\n        type=\"button\"\n        onClick={onLeaveFeedback}\n        key={key}\n        className={s.btn}\n      >\n        {key[0].toUpperCase(0) + key.slice(1)}\n      </button>,\n    );\n  }\n\n  return <div>{keyRender}</div>;\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.object.isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\n\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <div>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      <p>Positiv feedback: {positivePercentage}%</p>\n    </div>\n  );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\n\nfunction Notification({ message }) {\n  return <h3>{message}</h3>;\n}\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import { Component } from 'react';\nimport Section from './Components/Section';\nimport FeedbackOptions from './Components/FeedbackOptions';\nimport Statistics from './Components/Statistics';\nimport Notification from './Components/Notification';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0,\n    };\n    this.handleIncrement = this.handleIncrement.bind(this);\n  }\n\n  handleIncrement(event) {\n    const statisticName = event.target.name;\n\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        ...{ [statisticName]: prevState[statisticName] + 1 },\n      };\n    });\n  }\n\n  countTotalFeedback() {\n    let totalFeebback = 0;\n    for (var key in this.state) {\n      totalFeebback += this.state[key];\n    }\n    return totalFeebback;\n  }\n\n  countPositiveFeedbackPercentage(totalFeedback) {\n    return totalFeedback === 0\n      ? 0\n      : Math.round((this.state.good * 100) / totalFeedback);\n  }\n\n  render() {\n    const totalFeedback = this.countTotalFeedback();\n    const positivFeedback = this.countPositiveFeedbackPercentage(totalFeedback);\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <div>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.handleIncrement}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {totalFeedback ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={totalFeedback}\n              positivePercentage={positivFeedback}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__quXIY\"};"],"sourceRoot":""}